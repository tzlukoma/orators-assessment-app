{"ast":null,"code":"var _jsxFileName = \"/Users/Thomas/DEV/source_code/orators-app/orators-app-old/src/components/assessments/NewAssessment.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport FormFields from '../../ui/forms/FormFields';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport StarRatingComponent from 'react-star-rating-component';\nimport uuidv4 from 'uuid';\n\nclass NewAssessment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateForm = newState => {\n      this.setState({\n        formData: newState\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = {\n        assessment_id: uuidv4(),\n        orator_id: this.state.oratorID,\n        coach_id: 3,\n        //coach_id will need to come from authentication\n        projection_rating: this.state.projection_rating,\n        tone_rating: this.state.tone_rating,\n        poise_rating: this.state.poise_rating,\n        focus_rating: this.state.focus_rating,\n        presentation_rating: this.state.presentation_rating\n      };\n\n      for (let key in this.state.formData) {\n        dataToSubmit[key] = this.state.formData[key].value;\n      }\n\n      console.log(dataToSubmit);\n    };\n\n    this.state = {\n      isLoading: false,\n      isAuthenticated: false,\n      oratorID: parseInt(this.props.match.params.orator_id),\n      firstname: this.props.match.params.firstname,\n      lastname: this.props.match.params.lastname,\n      projection_rating: 0,\n      tone_rating: 0,\n      poise_rating: 0,\n      focus_rating: 0,\n      presentation_rating: 0,\n      // comment:'',\n      formData: {\n        comment: {\n          element: 'radio',\n          value: '',\n          label: false,\n          labelText: 'Select a comment',\n          config: {\n            name: 'comment_input',\n            options: [{\n              val: 'Excellent engagement, effort and participation',\n              text: 'Excellent engagement, effort and participation'\n            }, {\n              val: 'Be sure to incorporate feedback you have been given.',\n              text: 'Be sure to incorporate feedback you have been given.'\n            }, {\n              val: 'Engage more with the lesson so that you can improve',\n              text: 'Engage more with the lesson so that you can improve'\n            }, {\n              val: 'Well done!',\n              text: 'Well done!'\n            }, {\n              val: 'Nice improvement!',\n              text: 'Nice improvement!'\n            }, {\n              val: 'Be sure to practice more.  You will improve.',\n              text: 'Be sure to practice more.  You will improve.'\n            }, {\n              val: 'I see that you have been practicing.  Well done!',\n              text: 'I see that you have been practicing.  Well done!'\n            }, {\n              val: 'More focus and effort will give you better results.',\n              text: 'More focus and effort will give you better results.'\n            }]\n          }\n        },\n        remarks: {\n          element: 'textarea',\n          value: '',\n          label: true,\n          labelText: 'Additional Remarks',\n          config: {\n            name: 'remarks_input',\n            placeholder: 'Enter your additional remarks here',\n            multiline: true,\n            rows: 4,\n            rowsMax: 6\n          }\n        }\n      }\n    };\n  }\n\n  onProjectionStarClick(nextValue, prevValue, name) {\n    this.setState({\n      projection_rating: nextValue\n    });\n  }\n\n  onToneStarClick(nextValue, prevValue, name) {\n    this.setState({\n      tone_rating: nextValue\n    });\n  }\n\n  onPoiseStarClick(nextValue, prevValue, name) {\n    this.setState({\n      poise_rating: nextValue\n    });\n  }\n\n  onFocusStarClick(nextValue, prevValue, name) {\n    this.setState({\n      focus_rating: nextValue\n    });\n  }\n\n  onPresentationStarClick(nextValue, prevValue, name) {\n    this.setState({\n      presentation_rating: nextValue\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          projection_rating = _this$state.projection_rating,\n          tone_rating = _this$state.tone_rating,\n          poise_rating = _this$state.poise_rating,\n          focus_rating = _this$state.focus_rating,\n          presentation_rating = _this$state.presentation_rating;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        paddingTop: 64\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        padding: 20,\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\".concat(this.state.firstname, \" \").concat(this.state.lastname), \" \"), React.createElement(\"span\", {\n      style: {\n        fontSize: 15,\n        fontStyle: 'italic'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"- New Assessment\")), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, moment(Date.now()).format(\"LLL\")))), React.createElement(Container, {\n      style: {\n        textAlign: 'center',\n        marginTop: 20,\n        paddingBottom: 64\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Voice Projection (\", this.state.projection_rating, \"/5)\")), React.createElement(\"div\", {\n      style: {\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(StarRatingComponent, {\n      name: \"projection_rating\",\n      starCount: 5,\n      value: projection_rating,\n      renderStarIcon: () => React.createElement(\"div\", {\n        style: {\n          margin: 5,\n          fontSize: 50,\n          align: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u25A0\"),\n      starColor: 'orange',\n      emptyStarColor: 'grey',\n      onStarClick: this.onProjectionStarClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Voice Tone / Variation (\", this.state.tone_rating, \"/5)\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(StarRatingComponent, {\n      name: \"tone_rating\",\n      starCount: 5,\n      value: tone_rating,\n      renderStarIcon: () => React.createElement(\"div\", {\n        style: {\n          margin: 5,\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"\\u25A0\"),\n      starColor: 'orange',\n      emptyStarColor: 'grey',\n      onStarClick: this.onToneStarClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Poise / Posture (\", this.state.poise_rating, \"/5)\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(StarRatingComponent, {\n      name: \"poise_rating\",\n      starCount: 5,\n      value: poise_rating,\n      renderStarIcon: () => React.createElement(\"div\", {\n        style: {\n          margin: 5,\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"\\u25A0\"),\n      starColor: 'orange',\n      emptyStarColor: 'grey',\n      onStarClick: this.onPoiseStarClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Focus / Coachability (\", this.state.focus_rating, \"/5)\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(StarRatingComponent, {\n      name: \"focus_rating\",\n      starCount: 5,\n      value: focus_rating,\n      renderStarIcon: () => React.createElement(\"div\", {\n        style: {\n          margin: 5,\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"\\u25A0\"),\n      starColor: 'orange',\n      emptyStarColor: 'grey',\n      onStarClick: this.onFocusStarClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      style: {\n        fontSize: 20,\n        height: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Presentation Style (\", this.state.presentation_rating, \"/5)\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(StarRatingComponent, {\n      name: \"presentation_rating\",\n      starCount: 5,\n      value: presentation_rating,\n      renderStarIcon: () => React.createElement(\"div\", {\n        style: {\n          margin: 5,\n          fontSize: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"\\u25A0\"),\n      starColor: 'orange',\n      emptyStarColor: 'grey',\n      onStarClick: this.onPresentationStarClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(Container, {\n      style: {\n        textAlign: 'left',\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      style: {\n        fontSize: 18,\n        height: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Select a comment:\"), React.createElement(FormFields, {\n      formData: this.state.formData,\n      change: newState => this.updateForm(newState),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        textAlign: 'center',\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Submit Assessment\")))));\n  }\n\n}\n\nexport default NewAssessment;","map":{"version":3,"sources":["/Users/Thomas/DEV/source_code/orators-app/orators-app-old/src/components/assessments/NewAssessment.js"],"names":["React","Component","moment","FormFields","FormLabel","Container","Paper","Typography","Button","FormGroup","StarRatingComponent","uuidv4","NewAssessment","constructor","props","updateForm","newState","setState","formData","submitForm","event","preventDefault","dataToSubmit","assessment_id","orator_id","state","oratorID","coach_id","projection_rating","tone_rating","poise_rating","focus_rating","presentation_rating","key","value","console","log","isLoading","isAuthenticated","parseInt","match","params","firstname","lastname","comment","element","label","labelText","config","name","options","val","text","remarks","placeholder","multiline","rows","rowsMax","onProjectionStarClick","nextValue","prevValue","onToneStarClick","onPoiseStarClick","onFocusStarClick","onPresentationStarClick","render","paddingTop","padding","marginTop","fontSize","fontStyle","Date","now","format","textAlign","paddingBottom","margin","align","bind","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\nimport FormFields from '../../ui/forms/FormFields'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport StarRatingComponent from 'react-star-rating-component';\nimport uuidv4 from 'uuid'\n\n\nclass NewAssessment extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n    \n        this.state = {\n            isLoading: false,\n            isAuthenticated: false,\n            oratorID: parseInt(this.props.match.params.orator_id),\n            firstname: this.props.match.params.firstname,\n            lastname: this.props.match.params.lastname,\n            projection_rating: 0,\n            tone_rating:0,\n            poise_rating:0,\n            focus_rating:0,\n            presentation_rating:0,\n            // comment:'',\n            \n            formData: {\n                comment:{\n                    element:'radio',\n                    value:'',\n                    label: false,\n                    labelText:'Select a comment',\n                    config:{\n                        name:'comment_input',\n                        options:[\n                                {val:'Excellent engagement, effort and participation', text:'Excellent engagement, effort and participation'},\n                                {val:'Be sure to incorporate feedback you have been given.', text:'Be sure to incorporate feedback you have been given.'},\n                                {val:'Engage more with the lesson so that you can improve', text:'Engage more with the lesson so that you can improve'},\n                                {val:'Well done!', text:'Well done!'},\n                                {val:'Nice improvement!', text:'Nice improvement!'},\n                                {val:'Be sure to practice more.  You will improve.', text:'Be sure to practice more.  You will improve.'},\n                                {val:'I see that you have been practicing.  Well done!', text:'I see that you have been practicing.  Well done!'},\n                                {val:'More focus and effort will give you better results.', text:'More focus and effort will give you better results.'}\n\n                        ]\n                    }\n                },\n                remarks:{\n                    element:'textarea',\n                    value:'',\n                    label: true,\n                    labelText:'Additional Remarks',\n                    config:{\n                        name:'remarks_input',\n                        placeholder:'Enter your additional remarks here',\n                        multiline:true,\n                        rows:4,\n                        rowsMax:6\n                    }\n                }\n            }\n        };\n      }\n    \n    \n    \n    onProjectionStarClick(nextValue, prevValue, name) {\n        this.setState({projection_rating: nextValue});\n      }\n\n    onToneStarClick(nextValue, prevValue, name) {\n        this.setState({tone_rating: nextValue});\n      }\n    onPoiseStarClick(nextValue, prevValue, name) {\n    this.setState({poise_rating: nextValue});\n    }\n\n    onFocusStarClick(nextValue, prevValue, name) {\n        this.setState({focus_rating: nextValue});\n        }\n\n    onPresentationStarClick(nextValue, prevValue, name) {\n    this.setState({presentation_rating: nextValue});\n    }\n\n    updateForm = (newState) => {\n        this.setState({\n            formData: newState\n        })\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = {\n            assessment_id: uuidv4(),\n            orator_id:this.state.oratorID,\n            coach_id:3, //coach_id will need to come from authentication\n            projection_rating:this.state.projection_rating,\n            tone_rating:this.state.tone_rating,\n            poise_rating:this.state.poise_rating,\n            focus_rating:this.state.focus_rating,\n            presentation_rating:this.state.presentation_rating\n        };\n\n        for(let key in this.state.formData){\n            dataToSubmit[key] = this.state.formData[key].value\n        }\n\n        console.log(dataToSubmit)\n    }\n\n    render() {\n        const { projection_rating, tone_rating, poise_rating, focus_rating, presentation_rating} = this.state;\n        return (\n            <div>\n                <Container style={{paddingTop:64}}>\n                    {/* <Link to={`/orator_view/${this.state.oratorID}/${this.state.lastname}/${this.state.firstname}/yes`}>Back to Profile</Link> */}\n                    <Paper style={{padding:20, marginTop:20}} >\n                        <Typography variant=\"h5\" component=\"h3\">\n                        <span>{`${this.state.firstname} ${this.state.lastname}`} </span>\n                        <span style={{fontSize:15, fontStyle:'italic'}}>- New Assessment</span>\n                        </Typography>\n                        <Typography>\n                            {moment(Date.now()).format(\"LLL\")} \n                        </Typography>\n                    </Paper>\n                </Container>\n                <Container style={{textAlign:'center',marginTop:20, paddingBottom:64}}>\n                    <form onSubmit={this.submitForm}>\n                    <FormGroup>\n                            <FormLabel style={{fontSize:20}}><span>Voice Projection ({this.state.projection_rating}/5)</span></FormLabel>\n                            <div style={{marginTop:5}}>\n                                <StarRatingComponent \n                                    name=\"projection_rating\" \n                                    starCount={5}\n                                    value={projection_rating}\n                                    renderStarIcon={() => <div style={{margin:5,fontSize:50, align:'center'}}>■</div>}\n                                    starColor={'orange'}\n                                    emptyStarColor={'grey'}\n                                    onStarClick={this.onProjectionStarClick.bind(this)}\n                                />\n                            </div> \n                        </FormGroup>\n                        <FormGroup style={{marginTop:10}}>\n                            <FormLabel style={{fontSize:20}}>Voice Tone / Variation ({this.state.tone_rating}/5)</FormLabel>\n                            <div style={{marginTop:5}}>\n                                <StarRatingComponent \n                                name=\"tone_rating\" \n                                starCount={5}\n                                value={tone_rating}\n                                renderStarIcon={() => <div style={{margin:5,fontSize:50}}>■</div>}\n                                starColor={'orange'}\n                                emptyStarColor={'grey'}\n                                onStarClick={this.onToneStarClick.bind(this)}\n                                />\n                            </div>\n                        </FormGroup>\n                        <FormGroup style={{marginTop:10}}>\n                            <FormLabel style={{fontSize:20}}>Poise / Posture ({this.state.poise_rating}/5)</FormLabel>\n                            <div style={{marginTop:5}}>\n                                <StarRatingComponent \n                                name=\"poise_rating\" \n                                starCount={5}\n                                value={poise_rating}\n                                renderStarIcon={() => <div style={{margin:5,fontSize:50}}>■</div>}\n                                starColor={'orange'}\n                                emptyStarColor={'grey'}\n                                onStarClick={this.onPoiseStarClick.bind(this)}\n                                />\n                            </div>\n                        </FormGroup>\n                        <FormGroup style={{marginTop:10}}>\n                            <FormLabel style={{fontSize:20}}>Focus / Coachability ({this.state.focus_rating}/5)</FormLabel>\n                            <div style={{marginTop:5}}>\n                                <StarRatingComponent \n                                name=\"focus_rating\" \n                                starCount={5}\n                                value={focus_rating}\n                                renderStarIcon={() => <div style={{margin:5,fontSize:50}}>■</div>}\n                                starColor={'orange'}\n                                emptyStarColor={'grey'}\n                                onStarClick={this.onFocusStarClick.bind(this)}\n                                />\n                            </div>\n                        </FormGroup>\n                        <FormGroup style={{marginTop:10}}>\n                            <FormLabel style={{fontSize:20, height:14}}>Presentation Style ({this.state.presentation_rating}/5)</FormLabel>\n                            <div style={{marginTop:5}}>\n                                <StarRatingComponent \n                                name=\"presentation_rating\" \n                                starCount={5}\n                                value={presentation_rating}\n                                renderStarIcon={() => <div style={{margin:5,fontSize:50}}>■</div>}\n                                starColor={'orange'}\n                                emptyStarColor={'grey'}\n                                onStarClick={this.onPresentationStarClick.bind(this)}\n                                />\n                            </div>\n                        </FormGroup>\n                        <Container style={{textAlign:'left', marginTop:10}}>\n                            <FormLabel style={{fontSize:18, height:14}}>Select a comment:</FormLabel>\n                            <FormFields \n                                formData={this.state.formData}\n                                change={(newState) => this.updateForm(newState)}\n                            />\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"style={{textAlign: 'center', marginTop: 30}}>Submit Assessment</Button>\n                        </Container>\n                        \n                    </form>\n                </Container>\n            </div>\n            \n           \n         \n        );\n    }\n}\n\nexport default NewAssessment;"]},"metadata":{},"sourceType":"module"}